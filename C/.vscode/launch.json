// {
//     "version": "0.2.0",
//     "configurations": [{
//             "name": "C++ Launch",		// 配置名稱，將會在除錯配置下拉列表中顯示
//             "type": "cppdbg",			// 偵錯程式型別：Windows表示器使用cppvsdbg；GDB和LLDB使用cppdbg。該值自動生成
//             "request": "launch",		// 除錯方式
//             "program": "${workspaceRoot}/main.exe",		// 要除錯的程式（完整路徑，支援相對路徑）
//             "args": [],					// 傳遞給上面程式的引數，沒有引數留空即可
//             "stopAtEntry": false,		// 是否停在程式入口點（停在main函式開始）
//             "cwd": "${workspaceRoot}",	// 除錯程式時的工作目錄
//             "environment": [],
//             "externalConsole": true,	// 除錯時是否顯示控制檯視窗
//             "linux": {			// 下面是Linux平臺下，需要配置的引數，這裡暫時不用關心
//                 "MIMode": "gdb",
//                 "setupCommands": [{
//                     "description": "Enable pretty-printing for gdb",
//                     "text": "-enable-pretty-printing",
//                     "ignoreFailures": true
//                 }]
//             },
//             "osx": {			// 下面是Mac平臺下，需要配置的引數，這裡暫時不用關心
//                 "MIMode": "lldb"
//             },
//             "windows": {		// 下面是Windows平臺下，需要配置的引數
//                 "MIMode": "gdb",		// VSCode要使用的除錯工具
//                 "miDebuggerPath": "C:\\mingw64\\bin\\gdb.exe",		// miDebugger的路徑，該值必須設定。儘管會自動搜尋
//                 "setupCommands": [{
//                     "description": "Enable pretty-printing for gdb",
//                     "text": "-enable-pretty-printing",
//                     "ignoreFailures": true
//                 }]
//             }
//         },
//         { // 不用關心
//             "name": "C++ Attach",
//             "type": "cppdbg",
//             "request": "attach",
//             "program": "${workspaceRoot}/main.exe",
//             "processId": "${command.pickProcess}",			// 要Attach的程序ID
//             "linux": {
//                 "MIMode": "gdb",
//                 "setupCommands": [{
//                     "description": "Enable pretty-printing for gdb",
//                     "text": "-enable-pretty-printing",
//                     "ignoreFailures": true
//                 }]
//             },
//             "osx": {
//                 "MIMode": "lldb"
//             },
//             "windows": {
//                 "MIMode": "gdb",
//                 "setupCommands": [{
//                     "description": "Enable pretty-printing for gdb",
//                     "text": "-enable-pretty-printing",
//                     "ignoreFailures": true
//                 }]
//             }
//         }
//     ]
// }

// --------------------------------------------

// {
//     "version": "0.2.0",
//     "configurations": [{
//         "name": "C++ Launch (GDB)", // 配置名称，将会在启动配置的下拉菜单中显示
//         "type": "cppdbg", // 配置类型，这里只能为cppdbg
//         "request": "launch", // 请求配置类型，可以为launch（启动）或attach（附加）
//         "targetArchitecture": "x86", // 生成目标架构，一般为x86或x64，可以为x86, arm, arm64, mips, x64, amd64, x86_64
//         "program": "${file}.exe", // 将要进行调试的程序的路径
//         "miDebuggerPath": "C:\\MinGW\\bin\\gdb.exe", // miDebugger的路径，注意这里要与MinGw的路径对应
//         "args": [], // 程序调试时传递给程序的命令行参数，一般设为空即可
//         "stopAtEntry": false, // 设为true时程序将暂停在程序入口处，一般设置为false
//         "cwd": "${fileDirname}", // 调试程序时的工作目录，一般为${workspaceRoot}即代码所在目录
//         "externalConsole": true, // 调试时是否显示控制台窗口，一般设置为true显示控制台
//         "preLaunchTask": "g++",　　 // 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc
//     }]
// }


// ---------------------------------------------------

// {  
//     "version": "0.2.0",  
//     "configurations": [  
//         {  
//             "name": "(gdb) Launch", // 配置名称，将会在启动配置的下拉菜单中显示  
//             "type": "cppdbg",       // 配置类型，这里只能为cppdbg  
//             "request": "launch",    // 请求配置类型，可以为launch（启动）或attach（附加）  
//             "program": "${workspaceFolder}/${fileBasenameNoExtension}.exe",// 将要进行调试的程序的路径  
//             "args": [],             // 程序调试时传递给程序的命令行参数，一般设为空即可  
//             "stopAtEntry": false,   // 设为true时程序将暂停在程序入口处，一般设置为false  
//             "cwd": "${workspaceFolder}", // 调试程序时的工作目录，一般为${workspaceFolder}即代码所在目录  
//             "environment": [],  
//             "externalConsole": true, // 调试时是否显示控制台窗口，一般设置为true显示控制台  
//             "MIMode": "gdb",  
//             "miDebuggerPath": "C:\\MinGW\\bin\\gdb32.exe", // miDebugger的路径，注意这里要与MinGw的路径对应  
//             "preLaunchTask": "g++", // 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc  
//             "setupCommands": [  
//                 {   
// 		    "description": "Enable pretty-printing for gdb",  
//                     "text": "-enable-pretty-printing",  
//                     "ignoreFailures": true  
//                 }  
//             ]  
//         }  
//     ]  
// }


// {
//     "version": "0.2.0",
//     "configurations": [{
//         "name": "C++ Launch (GDB)", // 配置名称，将会在启动配置的下拉菜单中显示
//         "type": "cppdbg", // 配置类型，这里只能为cppdbg
//         "request": "launch", // 请求配置类型，可以为launch（启动）或attach（附加）
//         "targetArchitecture": "x86", // 生成目标架构，一般为x86或x64，可以为x86, arm, arm64, mips, x64, amd64, x86_64
//         "program": "${file}.exe", // 将要进行调试的程序的路径
//         "miDebuggerPath": "C:\\MinGW\\bin\\gdb.exe", // miDebugger的路径，注意这里要与MinGw的路径对应
//         "args": [], // 程序调试时传递给程序的命令行参数，一般设为空即可
//         "stopAtEntry": false, // 设为true时程序将暂停在程序入口处，一般设置为false
//         "cwd": "${fileDirname}", // 调试程序时的工作目录，一般为${workspaceRoot}即代码所在目录
//         "externalConsole": true, // 调试时是否显示控制台窗口，一般设置为true显示控制台
//         "preLaunchTask": "g++",　　 // 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc
//     }]
// }



// {
//     "version": "0.2.0",
//     "configurations": [
//         {
//             "name": "(gdb) Launch",
//             "type": "cppdbg",
//             "request": "launch",
//             "program": "${workspaceFolder}/file_name.exe",
//             "args": [],
//             "stopAtEntry": false,
//             "cwd": "${workspaceFolder}",
//             "environment": [],
//             "externalConsole": true,
//             "MIMode": "gdb",
//             //miDebuggerPath, normally as folow:
//             "miDebuggerPath": "C:\\Mingw\\bin\\gdb.exe",
//             "setupCommands": [
//                 {
//                     "description": "Enable pretty-printing for gdb",
//                     "text": "-enable-pretty-printing",
//                     "ignoreFailures": true
//                 }
//             ],
//              //optional, if you want to automatically build it
//             "preLaunchTask": "build"
//         }
//     ]
// }

{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "command": "",
    "args": [],
    "tasks": [
        {
            "label": "build",
            "command": "dotnet",
            "type": "shell",
            "args": [
                "build"
            ],
            "options": {
                "cwd": "${workspaceRoot}"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": "$msCompile"
        }
    ]
}